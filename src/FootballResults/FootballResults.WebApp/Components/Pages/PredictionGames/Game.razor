@page "/prediction-games/{GameID}"
@inherits GameBase

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "User")]

@if (Game != null && UserAuthorized)
{
    <PageTitle>@Game.Name</PageTitle>

    <h1>@Game.Name</h1>
    <p class="description">
        @if (@Game.Description != null)
        {
            @Game.Description
        }
    </p>

    <div id="gameContent">
        <div class="gameStandingCol">
            <!-- Game details -->
            <h2>Details</h2>
            <p class="details highlight">
                <span class="keyword">Owner</span>: @Game.Owner.Username<br />
                <span class="keyword">Exact scoreline reward</span>: @Game.ExactScorelineReward<br />
                <span class="keyword">Outcome reward</span>: @Game.OutcomeReward<br />
                <span class="keyword">Goal count / team reward</span>: @Game.GoalCountReward<br />
                <span class="keyword">Goal difference reward</span>:  @Game.GoalDifferenceReward<br />
                <span class="keyword">Created at</span>:
                @if (Game.CreatedAt != null)
                {
                    <ToLocal DateTime="@DateTime.SpecifyKind(Game.CreatedAt.Value, DateTimeKind.Utc)" Format="yyyy. mm. dd HH:MM" @rendermode="@RenderMode.InteractiveServer" />
                }
                <br />
                <span class="keyword">Status</span>: @(Game.IsFinished ? "finished" : "in progress")<br />
            </p>

            <!-- Invite button -->
            @if (ShowJoinKey)
            {
                <button type="button" class="btn button" @onclick="() => { ShowJoinKey = false; }">Hide</button>
                <div class="joinKey"><span class="keyword">Join key</span>: @Game.JoinKey</div>
            }
            else
            {
                <button type="button" class="btn button" @onclick="() => { ShowJoinKey = true; }">Invite people...</button>
            }

            <!-- Game standings -->
            <h2>Standings</h2>
            <GameStandingsCard Standings="@Game.GetLiveStandings()" />

            <!-- Chat -->
            <h2>Chat</h2>
            <CascadingValue Name="Game" Value="Game">
                <CascadingValue Name="User" Value="User">
                    <ChatWindow />
                </CascadingValue>
            </CascadingValue>
        </div>
        <div class="matchesCol">
            <!-- Matches -->
            <h2>Matches</h2>
            @foreach (var league in Game.Leagues)
            {
                <h3>@league.Name</h3>

                @if (Matches != null)
                {
                    <CascadingValue Name="Game" Value="Game">
                        <CascadingValue Name="User" Value="User">
                            @foreach (Match match in Matches.Where(m => m.LeagueID == league.LeagueID && !m.IsFinished()).OrderBy(m => m.Date))
                            {
                                <CascadingValue Name="Match" Value="match">
                                    <GameMatchCard />
                                </CascadingValue>
                            }
                            @foreach(Match match in Matches.Where(m => m.LeagueID == league.LeagueID && m.IsFinished()).OrderByDescending(m => m.Date))
                            {
                                <CascadingValue Name="Match" Value="match">
                                    <GameMatchCard />
                                </CascadingValue>
                            }
                        </CascadingValue>
                    </CascadingValue>
                }
                else
                {
                    <LoadingSpinner />
                }
            }
        </div>
        <div class="leagueStandingsCol">
            <!-- League standings -->
            <h2>League standings</h2>
            @foreach (var league in Game.Leagues)
            {
                <h3>@league.Name</h3>

                @if (LeagueStandings != null)
                {
                    <div class="leagueStanding highlight">
                        <StandingsCard Standings="@LeagueStandings.Where(s => s.LeagueID == league.LeagueID).OrderBy(s => s.Group).ThenBy(s => s.Rank)" />
                    </div>
                }
                else {
                    <LoadingSpinner />
                }
            }
        </div>
    </div>
}
else
{
    <PageTitle>Prediction game</PageTitle>
    <LoadingSpinner />
}