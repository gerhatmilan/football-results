@page "/prediction-games/{GameID}"
@inherits GameBase

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "User")]

@if (Game != null && UserAuthorized)
{
    <PageTitle>@Game.Name</PageTitle>

    <h1>@Game.Name</h1>
    <p class="description">
        @if (@Game.Description != null)
        {
            @Game.Description
        }
    </p>

    <div id="gameContent">
        <div class="gameStandingCol">
            <!-- Game details -->
            <h2>Details</h2>
            <p class="details highlight">
                <span class="keyword">Owner</span>: @Game.Owner.Username<br />
                <span class="keyword">Competitions</span>:
                    @String.Join(", ", Game.LeagueSeasons.Select(ls => ls.League.Name))
                <br />
                <span class="keyword">Exact scoreline reward</span>: @Game.ExactScorelineReward<br />
                <span class="keyword">Outcome reward</span>: @Game.OutcomeReward<br />
                <span class="keyword">Goal count / team reward</span>: @Game.GoalCountReward<br />
                <span class="keyword">Goal difference reward</span>:  @Game.GoalDifferenceReward<br />
                <span class="keyword">Created at</span>:
                @if (Game.CreatedAt != null)
                {
                    <ToLocal DateTime="@DateTime.SpecifyKind(Game.CreatedAt.Value, DateTimeKind.Utc)" Format="yyyy. mm. dd HH:MM" @rendermode="@RenderMode.InteractiveServer" />
                }
                <br />
                <span class="keyword">Status</span>: @(Game.Finished ? "finished" : "in progress")<br />

                @if (ShowJoinKey)
                {
                    <span class="keyword">Join key</span> @($": {Game.JoinKey}")
                }
            </p>

            <!-- Invite button -->
            @if (ShowJoinKey)
            {
                <button type="button" class="btn button" @onclick="() => { ShowJoinKey = false; }">Hide</button>
            }
            else
            {
                <button type="button" class="btn button" @onclick="() => { ShowJoinKey = true; }">Invite people...</button>
            }

            <!-- Game standings -->
            <h2>Standings</h2>
            <GameStandingsCard Standings="@Game.GetLiveStandings()" />

            <!-- Chat -->
            <h2>Chat</h2>
            <CascadingValue Name="Game" Value="Game">
                <CascadingValue Name="User" Value="User">
                    <ChatWindow />
                </CascadingValue>
            </CascadingValue>
        </div>
        <div class="matchesCol">
            <!-- Matches -->
            <h2>Matches</h2>

            <!-- Choose league if there are multiple leagues included in the game -->
            @if (Game.LeagueSeasons.Count() > 1)
            {
                <div class="dropdown">
                    <button class="dropdown-toggle btn button" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @SelectedLeague?.Name
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        @foreach (League league in Game.LeagueSeasons.Select(ls => ls.League))
                        {
                            <button type="button" class="dropdown-item" @onclick="async() => await ChangeLeague(league)">
                                @league.Name
                            </button>
                        }
                    </div>
                </div>
            }

            @if (Matches != null)
            {
                <CascadingValue Name="Game" Value="Game">
                    <CascadingValue Name="User" Value="User">
                        <!-- first display all matches on the current day, first the non finished ones, then the finished ones -->

                        @if (FinishedMatchesToday.Count() > 0 || UpcomingMatchesToday.Count() > 0)
                        {
                            <h3>Today</h3>
                            @foreach (Match match in UpcomingMatchesToday)
                            {
                                <CascadingValue Name="Match" Value="match">
                                    <GameMatchCard />
                                </CascadingValue>
                            }
                            @foreach (Match match in FinishedMatchesToday)
                            {
                                <CascadingValue Name="Match" Value="match">
                                    <GameMatchCard />
                                </CascadingValue>
                            }
                        }

                        <!-- then display the remaining matches, first the non finished ones, then the finished ones -->
                        @if (UpcomingMatchesDecludingToday.Count() > 0)
                        {
                            <h3>Upcoming</h3>
                            @foreach (Match match in UpcomingMatchesDecludingToday)
                            {
                                <CascadingValue Name="Match" Value="match">
                                    <GameMatchCard />
                                </CascadingValue>
                            }
                        }
                        
                        @if (FinishedMatchesDecludingToday.Count() > 0)
                        {
                            <h3>Finished</h3>
                            @foreach (Match match in FinishedMatchesDecludingToday)
                            {
                                <CascadingValue Name="Match" Value="match">
                                    <GameMatchCard />
                                </CascadingValue>
                            }
                        }
                    </CascadingValue>
                </CascadingValue>
            }
            else
            {
                <LoadingSpinner />
            }
        </div>
        <div class="leagueStandingsCol">
            <!-- League standings -->
            <h2>League standings</h2>
            @foreach (var leagueSeason in Game.LeagueSeasons)
            {
                <h3>@leagueSeason.League.Name</h3>

                @if (leagueSeason.Standings != null)
                {
                    <div class="leagueStanding highlight">
                        <StandingsCard Standings="@leagueSeason.Standings" />
                    </div>
                }
                else {
                    <LoadingSpinner />
                }
            }
        </div>
    </div>
}
else
{
    <PageTitle>Prediction game</PageTitle>
    <LoadingSpinner />
}