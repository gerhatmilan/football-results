@page "/leagues/{LeagueName}"
@inherits LeagueDetailsBase

<PageTitle>@LeagueName</PageTitle>

@if (League != null)
{
    <div class="header">
        <div class="leagueHeader">
            <div class="nameHeader">
                @League.Name
                <AuthorizeView>
                    <Authorized>
                        <BookmarkIcon Bookmark="League" DefaultColor="defaultLight" ButtonClicked="OnBookmarkClicked" />
                    </Authorized>
                </AuthorizeView>
            </div>
            <img class="leagueLogo" src="@League.LogoLink" alt="@League.Name logo" />
        </div>
    </div>
    <div class="subMenu">
        <button class="@(ActiveSubMenu!.Equals(LeagueDetailsSubMenu.Matches) ? "active" : "")" type="button" @onclick="OnMatchesSelected">Matches</button>
        <button class="@(ActiveSubMenu!.Equals(LeagueDetailsSubMenu.Standings) ? "active" : "")" type="button" @onclick="async () => await OnStandingsSelected()">Standings</button>
        <button class="@(ActiveSubMenu!.Equals(LeagueDetailsSubMenu.TopScorers) ? "active" : "")" type="button" @onclick="async () => await OnTopScorersSelected()">Top scorers</button>
    </div>
    <div class="submenuContent">
        @if (ActiveSubMenu == LeagueDetailsSubMenu.Matches)
        {
            <MatchFilter FilterTarget="this" FilterSubmitted="OnMatchFilterSubmitted" FilterParameters="MatchFilterParameters" SeasonChanged="OnSeasonChanged" MatchOrderChanged="OnMatchOrderChanged" />
            @if (Matches != null)
            {
                @if (Matches.Count() > 0)
                {
                    <div class=LeagueDetailsSubMenu.Matches>
                        @foreach (var matchesByLeagueGroup in GetMatchesByLeague())
                        {
                            <LeagueCard League="matchesByLeagueGroup.matches.First().League" Matches="matchesByLeagueGroup.matches" MatchOrderOption="@MatchOrderOption" BookmarkClicked="OnBookmarkClicked" />
                        }
                    </div>
                }
                else
                {
                    <h2>No matches found</h2>
                }
            }
            else
            {
                <LoadingSpinner />
            }
        }

        @if (ActiveSubMenu == LeagueDetailsSubMenu.Standings)
        {
            @if (Standings != null)
            {
                @if (SeasonFilter != null)
                {
                    <h2>Season @String.Concat(SeasonFilter.ToString()!.Substring(2),
                        "/", (SeasonFilter + 1).ToString()!.Substring(2))
                    </h2>

                    @if (Standings.Count() > 0)
                    {
                        <StandingsCard Standings="Standings" />
                    }
                    else
                    {
                        <h2>No data</h2>
                    }
                }
                else
                {
                    <h2>Season has to be set</h2>
                }
            }
            else
            {
                <LoadingSpinner />
            }
        }

        @if (ActiveSubMenu == LeagueDetailsSubMenu.TopScorers)
        {
            @if (TopScorers != null)
            {
                @if (SeasonFilter != null)
                {
                    <h2>
                        Season @String.Concat(SeasonFilter.ToString()!.Substring(2),
                          "/", (SeasonFilter + 1).ToString()!.Substring(2))
                    </h2>
                    @if (TopScorers.Count() > 0)
                    {
                        <TopScorersCard TopScorers="TopScorers" />
                    }
                    else
                    {
                        <h2>No data</h2>
                    }
                }
                else
                {
                    <h2>Season has to be set</h2>
                }
            }
            else
            {
                <LoadingSpinner />
            }
        }
    </div>
}
else
{
    <LoadingSpinner />
}
