@inherits MatchFilterBase

@if (FilterTargetPage != null && FilterParameters != null)
{
    <div class="filterSection">
        <div class="input-group mb-3">
            <input type="number" class="form-control" placeholder="Year" @bind="FilterParameters.YearFilter" @bind:after="OnMatchFilterSubmitted" />
            <input type="number" class="form-control" placeholder="Month" min="1" max="12" @bind="FilterParameters.MonthFilter" @bind:after="OnMatchFilterSubmitted" />
            <input type="number" class="form-control" placeholder="Day" min="1" max="31" @bind="FilterParameters.DayFilter" @bind:after="OnMatchFilterSubmitted" />
        </div>

        @if (FilterTargetPage.GetType() == typeof(TeamDetails))
        {
            <div class="input-group mb-3">
                <select title="Home or away only selector" class="form-select" @bind="FilterParameters.HomeAwayFilter" @bind:after="OnMatchFilterSubmitted">
                    <option selected value="All">Home and Away</option>
                    <option value="Home">Home</option>
                    <option value="Away">Away</option>
                </select>
            </div>
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Opponent" @bind="FilterParameters.OpponentNameFilter" @bind:after="OnMatchFilterSubmitted" />
            </div>
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Competition" @bind="FilterParameters.LeagueFilter" @bind:after="OnMatchFilterSubmitted" />
            </div>
        }
        else if (FilterTargetPage.GetType() == typeof(MatchDetails))
        {
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Competition" @bind="FilterParameters.LeagueFilter" @bind:after="OnMatchFilterSubmitted" />
            </div>
        }

        <div class="input-group mb-3">
            <input type="number" class="form-control" min="2008" placeholder="Season" @bind="FilterParameters.SeasonFilter" @bind:after="OnMatchFilterSubmitted" />
        </div>
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Round" @bind="FilterParameters.RoundFilter" @bind:after="OnMatchFilterSubmitted" />
        </div>

        @if (FilterTargetPage.GetType() == typeof(LeagueDetails))
        {
            <div class="input-group mb-3">
                <button type="button" class="btn button"
                        @onclick="@(async() => await OnMatchOrderChanged(MatchOrderOption.RoundThenDateAsc))">
                    Earliest first
                </button>
            </div>
            <div class="input-group mb-3">
                <button type="button" class="btn button"
                        @onclick="@(async () => await OnMatchOrderChanged(MatchOrderOption.RoundThenDateDesc))">
                    Latest first
                </button>
            </div>
        }
        else if (FilterTargetPage.GetType() == typeof(TeamDetails))
        {
            <div class="input-group mb-3">
                <button type="button" class="btn button"
                        @onclick="@(async() => await OnMatchOrderChanged(MatchOrderOption.DateAsc))">
                    Earliest first
                </button>
            </div>
            <div class="input-group mb-3">
                <button type="button" class="btn button"
                        @onclick="@(async () => await OnMatchOrderChanged(MatchOrderOption.DateDesc))">
                    Latest first
                </button>
            </div>
        }
        else if (FilterTargetPage.GetType() == typeof(MatchDetails))
        {
            <div class="input-group mb-3">
                <button type="button" class="btn button"
                        @onclick="@(async() => await OnMatchOrderChanged(MatchOrderOption.DateAsc))">
                    Earliest first
                </button>
            </div>
            <div class="input-group mb-3">
                <button type="button" class="btn button"
                        @onclick="@(async () => await OnMatchOrderChanged(MatchOrderOption.DateDesc))">
                    Latest first
                </button>
            </div>
        }
               
    </div>
}