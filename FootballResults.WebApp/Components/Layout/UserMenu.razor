<button id="profileButton" type="button" class="dropdown-toggle" role="button" data-bs-toggle="dropdown" aria-expanded="false">
    <ProfileIcon User="User" />
</button>
<nav class="navbar">
    <ul class="navbar-nav">
        <ul class="dropdown-menu">
            <AuthorizeView>
                <Authorized>
                    <li class="username">@User?.Username</li>
                    <li><hr class="dropdown-divider"></li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/prediction-games" Match="NavLinkMatch.Prefix">
                            Prediction games
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/favorites">
                            Favorites
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/settings">
                            Settings
                        </NavLink>
                    </li>
                    <AuthorizeView Roles="Admin">
                        <Authorized Context="AdminContext">
                            <li class="nav-item">
                                <NavLink class="nav-link" href="/application-settings">
                                    App settings
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <NavLink class="nav-link" href="/updater-runner">
                                    Updaters
                                </NavLink>
                            </li>
                        </Authorized>
                    </AuthorizeView>
                    <li class="nav-item">
                        <NavLink class="nav-link" @onclick="LogoutAsync">
                            Log out
                        </NavLink>
                    </li>
                </Authorized>
                <NotAuthorized>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/login">
                            Log in
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/signup">
                            Sign up
                        </NavLink>
                    </li>
                </NotAuthorized>
            </AuthorizeView>
        </ul>
    </ul>
</nav>

@code {
    [CascadingParameter(Name = "User")]
    public User? User { get; set; }

    [Inject]
    protected NavigationManager NavigationManager { get; set; } = default!;

    [Inject]
    protected IJSRuntime JSRuntime { get; set; } = default!;

    protected async Task LogoutAsync()
    {
        await JSRuntime.InvokeVoidAsync("postRequest", NavigationManager.BaseUri + "api/authentication/logout");
        NavigationManager.Refresh(forceReload: true);
    }
}