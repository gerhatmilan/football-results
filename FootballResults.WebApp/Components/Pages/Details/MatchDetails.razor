@page "/matches/{MatchID}"
@inherits MatchDetailsBase

@if (Match != null)
{
    <PageTitle>@Match.HomeTeam.Name vs @Match.AwayTeam.Name</PageTitle>
}
else
{
    <PageTitle>Match details</PageTitle>
}

@if (Match != null)
{
    <div class="matchContainer">
        <MatchCard Match="Match" />
    </div>
    <div class="matchDetails">
        <h1>Details</h1>
        <ul>
            <li>
                Date:
                @if (Match.Date != null)
                {
                    <ToLocal DateTime="@DateTime.SpecifyKind(Match.Date.Value, DateTimeKind.Utc)" Format="yyyy. mm. dd" @rendermode="@RenderMode.InteractiveServer" />
                }
                else
                {
                    <span> Unknown</span>
                }
            </li>
            <li>
                Time:
                @if (Match.Date != null)
                {
                    <ToLocal DateTime="@DateTime.SpecifyKind(Match.Date.Value, DateTimeKind.Utc)" Format="HH:MM" @rendermode="@RenderMode.InteractiveServer" />
                }
                else
                {
                    <span> Unknown</span>
                }
            </li>
            <li>
                League: @(Match.League?.Name ?? "Unknown")
            </li>
            <li>
                Season: @Match.LeagueSeason.Year
            </li>
            <li>
                Round: @(Match.Round ?? "Unknown")
            </li>
            <li>
                Country: @(Match.Venue?.Country?.Name ?? "Unknown")
            </li>
            <li>
                Stadium: @(Match.Venue?.Name ?? "Unknown")
            </li>
        </ul>
    </div>
    <div class="head2head">
        <h1>Head to head</h1>
        <MatchFilter FilterTargetPage=this FilterSubmitted="OnMatchFilterSubmitted" FilterParameters="MatchFilterParameters" MatchOrderChanged="OnMatchOrderChanged" />
        @if (Matches != null)
        {
            @if (Matches.Count() > 0)
            {
                <Virtualize TItem="LeagueMatchGroup" Items="ViewHelper.GetMatchesGroupedByLeague(Matches, User).ToList()" Context="leagueMatchGroup">
                    <ItemContent>
                        <LeagueHeaderCard League="leagueMatchGroup.League" Matches="leagueMatchGroup.Matches" MatchOrderOption="@MatchOrderOption" />
                    </ItemContent>
                </Virtualize>
            }
            else
            {
                <h2>No matches found</h2>
            }
        }
    </div>
}
else
{
    <LoadingSpinner />
}
