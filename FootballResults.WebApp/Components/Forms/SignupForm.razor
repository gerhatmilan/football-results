@inherits SignupFormBase

@if (SignupModel != null)
{
    <div id="signupForm" class="form">
        <EditForm Model="@SignupModel" OnValidSubmit="RegisterUserAsync" FormName="SignUpForm">
            <DataAnnotationsValidator />

            <div class="mb-3">
                <label>Email</label>
                <InputText @bind-Value="@SignupModel.Email" class="input form-control" placeholder="Email" />
                <ValidationMessage For="@(() => SignupModel.Email)" class="error" />
                @if (SignupModel.EmailAlreadyInUseError)
                {
                    <div class="error">Email is already in use</div>
                }
            </div>
            <div class="mb-3">
                <label>Username</label>
                <InputText @bind-Value="@SignupModel.Username" class="input form-control" placeholder="Username" />
                <ValidationMessage For="@(() => SignupModel.Username)" class="error" />
                @if (SignupModel.UsernameAlreadyInUseError)
                {
                    <div class="error">Username is already in use</div>
                }
            </div>
            <div class="mb-3">
                <label>Password</label>
                <InputText @bind-Value="@SignupModel.Password" class="input form-control" type="password" placeholder="Password" />
                <ValidationMessage For="@(() => SignupModel.Password)" class="error" />
            </div>
            <div id="submitDiv">
                <button type="submit" disabled="@ButtonDisabled" class="btn button">Sign up</button>
            </div>
        </EditForm>
    </div>

    @if (SignupModel.Success)
    {
        <div class="alert alert-success" role="alert">
            Registration successful! You can now <a href="/login">log in</a>.
        </div>
    }
    else if (SignupModel.Error)
    {
        <div class="alert alert-danger" role="alert">An error has occured. Please try again later.</div>
    }
}
else
{
    <LoadingSpinner />
}